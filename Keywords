haa:

Meaning: Represents the "if" keyword in conditional statements.
Function: Begins an if statement where the provided condition is evaluated. If the condition is true, the statements within the block are executed.
uhh:

Meaning: Represents the "else" keyword in conditional statements.
Function: Denotes the block of code to be executed if the condition in the corresponding "if" statement is false.
uhha:

Meaning: Represents the "elif" keyword in conditional statements.
Function: Provides an alternative condition to be evaluated if the previous "if" or "elif" conditions are false. If the condition is true, the statements within the block are executed.
haan:

Meaning: Represents the "for" keyword in loop statements.
Function: Begins a for loop where the specified initialization, condition, and update expressions are evaluated. The statements within the block are executed iteratively based on the condition.
Mm:

Meaning: Represents the "while" keyword in loop statements.
Function: Begins a while loop where the specified condition is evaluated before each iteration. If the condition is true, the statements within the block are executed.
ye mm:

Meaning: Represents the "do-while" keyword in loop statements.
Function: Begins a do-while loop where the statements within the block are executed at least once, and then the condition is evaluated. If the condition is true, the loop continues.
Paaru:

Meaning: Represents the "print" keyword for output.
Function: Prints the values of the provided expressions to the console.
sollu:

Meaning: Represents the "scan" keyword for input.
Function: Scans input from the user and stores it in the specified variable.
int mukiyam:

Meaning: Represents the "int main" function declaration in C-like languages.
Function: Declares the main function where the execution of the program begins.
seru, kora, Ona, piri:

Meaning: Represent arithmetic operators for addition, subtraction, multiplication, and division, respectively.
Function: Perform the corresponding arithmetic operation on the operands.
moolyam:

Meaning: Represents the "int" keyword for integer data type.
Function: Specifies the integer data type for variable declarations.
varisai:

Meaning: Represents the "float" keyword for floating-point number data type.
Function: Specifies the floating-point number data type for variable declarations.
vaathiyar:

Meaning: Represents the "char" keyword for character data type.
Function: Specifies the character data type for variable declarations.
pali:

Meaning: Represents the "bool" keyword for boolean data type.
Function: Specifies the boolean data type for variable declarations.
solluvai:

Meaning: Represents the "string" keyword for string data type.
Function: Specifies the string data type for variable declarations.
athu:

Meaning: Represents the "def" keyword for defining functions.
Function: Marks the beginning of a function definition.
idam:

Meaning: Represents the "class" keyword for defining classes.
Function: Marks the beginning of a class definition.
mudhala:

Meaning: Represents the "end" keyword for ending class or function definitions.
Function: Marks the end of a class or function definition.
niyal:

Meaning: Represents the "for" keyword for loop statements.
Function: Marks the beginning of a for loop.
koodal:

Meaning: Represents the "else" keyword for else part of if-else statements.
Function: Marks the beginning of the else part of an if-else statement.
ippathaal:

Meaning: Represents the "elif" keyword for elif part of if-elif-else statements.
Function: Marks the beginning of the elif part of an if-elif-else statement.
annippadu:

Meaning: Represents the "return" keyword for returning values from functions.
Function: Indicates the return of a value from a function.
kootu:

Meaning: Represents the "append" keyword for appending to lists or arrays.
Function: Appends the specified value to a list or array.
